
references {

	statsAnomalies(sqlEquipes) {
	
		type "tqsl"
		
		from "
			r5events s
				left join R5PROPERTYVALUES e on e.prv_rentity='EVNT' and e.prv_class_org='*' and e.prv_class='*' and e.prv_property='EQUIPEAF' and e.prv_code=s.evt_code
			
		"
		
		fields {
		
			items {
				anomalie "isnull(s.evt_reqm, s.evt_udfchar03)"
				
				equipe "e.prv_value"
				
				mois "month(s.evt_reported)"
				
				nb { exp "count(*)" type "float" }
				
				nbTraites { 
					exp "sum(case 
							when (s.evt_status in ('TVTM', 'FICL', 'FIRJ')) then 1
							else 0  
						end)" 
					
					type "float" 
				}
				
				nbDelaiOK { 
					exp "sum(case 
							when (s.evt_status not in ('TVTM', 'FICL', 'FIRJ')) then 0
							when (s.evt_completed is null or s.evt_start is null) then 0 
							when convert(float, s.evt_completed-s.evt_reported) > 1.0 then 0
							else 1  
						end)" 
					
					type "float" 
				}
				
				tme { 
					exp "sum(case when (evt_completed is null or evt_start is null) then 0.0 else convert(float, (evt_completed-evt_start)) end)" 
					
					type "float" 
				}
				
				tmt { 
					exp "sum(case when (evt_completed is null or evt_reported is null) then 0.0 else convert(float, (evt_completed-evt_reported))  end)" 
					
					type "float" 
				}
			}
		}
		
		criteria = "s.evt_createdby = 'SARA'" + (sqlEquipes  ==  null ? "" : (" and e.prv_value in " + sqlEquipes) )
		
		groupBy "month(s.evt_reported), e.prv_value, isnull(s.evt_reqm, s.evt_udfchar03)"
	
	}

	field(sourceDr, rootDr, anomaly, fieldName, month, crews) {
		if = anomaly
		value = fieldName
	}
	
}

init {
	structures {
		DRABO {
			equipes "EQ ABOBO NORD,EQ ABOBO SUD"
		}
		
		DRANE {
			equipes "EQ SEC PALM BAY, EQ SECT ANGRE, EQ SECT COCODY, EQ SECT PALMERA, EQ SECT PLATEAU"
		}
		
		DRAS {
			equipes "EQ SECT KOUMASS, EQ SECT MARCORY, EQ SECT VRIDI, EQ SECT ZONE 4"
		}
		
		DRYOP {
			equipes "EQ SECT ANANERA, EQ SECT NIANGON, EQ SECT WASSAKA, EQ SECT YOP"
		}
	}
	
	codesAnomalie {
		categories ["fuitesBranchement", "fuitesRobinet", "traverseeCassee", "fuitesCompteur"]
		
		fuitesBranchement "D16, D17, D18, D28, D39, D22"
		
		fuitesRobinet "D26, D37"
		
		traverseeCassee "D38"
		
		fuitesCompteur "D20, D29, D32, D35, D36, D42"
		
		manqueEau "D33, D43, D48, 47, D49, D50"
	}
	
	champs ["nb", "nbTraites", "nbDelaiOK", "tme", "tmt" ]
	
	snumMois ['01','02','03','04','05','06','07','08','09','10','11','12']
	
	sourceDr "TEST1"
	
	rootDr "TEST2"
	
	crews "TEST3"
}

entities(structure, sqlEquipes) {
	stats {
		type "row-to-field"
		
		beforeConnection {
			sqlEquipes = "TEST"
		}
		
		source @statsAnomalies(sqlEquipes)
		
		fields {
			items {
				*for(mois in snumMois) 
					_name =  "fuitesBranchement_nb" + mois @field(sourceDr, rootDr, "fuitesBranchement", "nb", mois, crews)
					
				*for(mois in snumMois) 
					_name =  "fuitesBranchement_nb" + mois @field(sourceDr, rootDr, "fuitesBranchement", "nb", mois, crews)
					
			}
		}
	}
}